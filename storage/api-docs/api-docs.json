{
    "openapi": "3.0.0",
    "info": {
        "title": "Social Network",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://social.loc/api"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "App\\Http\\Controllers\\Auth\\LoginController::login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged in"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "access_token": "Generated token",
                                                "expires_in": "Expiration time in seconds",
                                                "token_type": "Bearer",
                                                "refresh_token": "Generated refresh token"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "Invalid email and/or password"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "description": "Register new user",
                "operationId": "App\\Http\\Controllers\\Auth\\RegisterController::register",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "surname"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Same as password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "password": [
                                                    "The password must be at least 8 characters.",
                                                    "The password confirmation does not match."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get auth user",
                "operationId": "App\\Http\\Controllers\\UserController::getAuthUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "John",
                                                "surname": "Doe",
                                                "avatar": "http://site.com/img/avatar.png",
                                                "friends_count": 355,
                                                "friend_requests_count": 6,
                                                "email": "user@gmail.com",
                                                "created_at": "2021-01-15 12:59:20",
                                                "updated_at": "2021-01-20 04:25:15",
                                                "join_date": "10 days ago"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/search?phrase={phrase}&friends={friends}&page={page}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Search in all users",
                "operationId": "App\\Http\\Controllers\\UserController::search",
                "parameters": [
                    {
                        "name": "phrase",
                        "in": "path",
                        "description": "Phrase to search. Formats: 'name', 'surname', 'name surname', 'surname name'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "friends",
                        "in": "path",
                        "description": "Phrase to search in friends list. Formats: 'name', 'surname', 'name surname', 'surname name'",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Paginates data",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "description": "Get user with relationship info",
                "operationId": "App\\Http\\Controllers\\UserController::show",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User id to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "avatar": "http://site.com/img/default.png",
                                                "friends_count": 0,
                                                "name": "Test",
                                                "surname": "First",
                                                "relationship": {
                                                    "id": 8,
                                                    "status": "pending",
                                                    "is_sender": false
                                                },
                                                "created_at": "2021-01-16T13:39:29",
                                                "updated_at": "2021-01-16T13:39:29",
                                                "join_date": "4 days ago"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/friends?page={page}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get auth user friends",
                "operationId": "App\\Http\\Controllers\\UserController::getFriends",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Paginates data",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "links": {
                        "type": "object",
                        "example": {
                            "first": "first page link",
                            "last": "last page link",
                            "next": "next page link",
                            "prev": "prev page link"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "example": {
                            "current_page": 1,
                            "from": 1,
                            "last_page": 1,
                            "path": "full url path",
                            "per_page": 10,
                            "to": 2,
                            "total": 2
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCollection"
                }
            },
            "UserResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Doe"
                    },
                    "avatar": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "http://site.com/img/avatar.png"
                    },
                    "friends_count": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "355"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "user@gmail.com"
                    },
                    "created_at": {
                        "description": "Registration date and time",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-01-15 12:59:20"
                    },
                    "updated_at": {
                        "description": "Last updated date and time",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2021-01-20 04:25:15"
                    },
                    "join_date": {
                        "description": "Registration date in human radable format",
                        "type": "string",
                        "readOnly": "true",
                        "example": "10 days ago"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "description": "Use /login endpoint to get access token",
                "name": "Bearer",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}